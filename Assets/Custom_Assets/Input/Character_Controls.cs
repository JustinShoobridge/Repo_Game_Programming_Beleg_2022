//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Custom_Assets/Input/Character_Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Character_Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Character_Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Character_Controls"",
    ""maps"": [
        {
            ""name"": ""NormalMovement"",
            ""id"": ""f41dd1df-6524-4291-a7a6-ba5d7dcc5871"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""baf39375-1148-4937-ae15-8b86819ff783"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""77eb0b39-f447-4da6-bf16-649d8be759a4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump1"",
                    ""type"": ""Button"",
                    ""id"": ""9f73d50a-7847-40ca-9d37-33a35b4f20ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse_Actions"",
                    ""type"": ""Value"",
                    ""id"": ""c51c6db8-4ea0-4976-9913-479b73f6eedb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""e5184722-efb7-46d0-abbe-ca34286256c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RestartGame"",
                    ""type"": ""Button"",
                    ""id"": ""a7ca147d-75a6-4783-88a2-cddfeb51aed3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuitGame"",
                    ""type"": ""Button"",
                    ""id"": ""b6ac6771-2787-4b52-a362-4bac68a5ef65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""4e3198f6-c894-4b14-899e-3bf1e41c0899"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""17ce0595-0cda-4672-981e-677852633af0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a260cd74-7924-4d66-8d96-109b7f14e32c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f55cd84a-8880-4959-8544-fef0e4fd55ac"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""25fcd062-bbf2-4f69-83dc-8d9d08bcc53e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""33a3f3a4-d9f8-4300-a271-fadc496d72c2"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.03,y=0.03)"",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""142bb1a4-b622-4dd2-a22a-124b2bc98242"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab874177-3883-4ccd-95ee-f2451785b61a"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b743172-1995-4e49-9bb8-71496897ce5d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse_Actions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4285a0d-7ea3-420f-9663-67b82e37b4ce"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62673305-0094-465a-b5f4-cf340b452bdd"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RestartGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f2a63c9-7c16-4351-a2b4-844fa921601d"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""QuitGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // NormalMovement
        m_NormalMovement = asset.FindActionMap("NormalMovement", throwIfNotFound: true);
        m_NormalMovement_Move = m_NormalMovement.FindAction("Move", throwIfNotFound: true);
        m_NormalMovement_Look = m_NormalMovement.FindAction("Look", throwIfNotFound: true);
        m_NormalMovement_Jump1 = m_NormalMovement.FindAction("Jump1", throwIfNotFound: true);
        m_NormalMovement_Mouse_Actions = m_NormalMovement.FindAction("Mouse_Actions", throwIfNotFound: true);
        m_NormalMovement_Sprint = m_NormalMovement.FindAction("Sprint", throwIfNotFound: true);
        m_NormalMovement_RestartGame = m_NormalMovement.FindAction("RestartGame", throwIfNotFound: true);
        m_NormalMovement_QuitGame = m_NormalMovement.FindAction("QuitGame", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // NormalMovement
    private readonly InputActionMap m_NormalMovement;
    private INormalMovementActions m_NormalMovementActionsCallbackInterface;
    private readonly InputAction m_NormalMovement_Move;
    private readonly InputAction m_NormalMovement_Look;
    private readonly InputAction m_NormalMovement_Jump1;
    private readonly InputAction m_NormalMovement_Mouse_Actions;
    private readonly InputAction m_NormalMovement_Sprint;
    private readonly InputAction m_NormalMovement_RestartGame;
    private readonly InputAction m_NormalMovement_QuitGame;
    public struct NormalMovementActions
    {
        private @Character_Controls m_Wrapper;
        public NormalMovementActions(@Character_Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_NormalMovement_Move;
        public InputAction @Look => m_Wrapper.m_NormalMovement_Look;
        public InputAction @Jump1 => m_Wrapper.m_NormalMovement_Jump1;
        public InputAction @Mouse_Actions => m_Wrapper.m_NormalMovement_Mouse_Actions;
        public InputAction @Sprint => m_Wrapper.m_NormalMovement_Sprint;
        public InputAction @RestartGame => m_Wrapper.m_NormalMovement_RestartGame;
        public InputAction @QuitGame => m_Wrapper.m_NormalMovement_QuitGame;
        public InputActionMap Get() { return m_Wrapper.m_NormalMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NormalMovementActions set) { return set.Get(); }
        public void SetCallbacks(INormalMovementActions instance)
        {
            if (m_Wrapper.m_NormalMovementActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnLook;
                @Jump1.started -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnJump1;
                @Jump1.performed -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnJump1;
                @Jump1.canceled -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnJump1;
                @Mouse_Actions.started -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnMouse_Actions;
                @Mouse_Actions.performed -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnMouse_Actions;
                @Mouse_Actions.canceled -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnMouse_Actions;
                @Sprint.started -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnSprint;
                @RestartGame.started -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnRestartGame;
                @RestartGame.performed -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnRestartGame;
                @RestartGame.canceled -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnRestartGame;
                @QuitGame.started -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnQuitGame;
                @QuitGame.performed -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnQuitGame;
                @QuitGame.canceled -= m_Wrapper.m_NormalMovementActionsCallbackInterface.OnQuitGame;
            }
            m_Wrapper.m_NormalMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Jump1.started += instance.OnJump1;
                @Jump1.performed += instance.OnJump1;
                @Jump1.canceled += instance.OnJump1;
                @Mouse_Actions.started += instance.OnMouse_Actions;
                @Mouse_Actions.performed += instance.OnMouse_Actions;
                @Mouse_Actions.canceled += instance.OnMouse_Actions;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @RestartGame.started += instance.OnRestartGame;
                @RestartGame.performed += instance.OnRestartGame;
                @RestartGame.canceled += instance.OnRestartGame;
                @QuitGame.started += instance.OnQuitGame;
                @QuitGame.performed += instance.OnQuitGame;
                @QuitGame.canceled += instance.OnQuitGame;
            }
        }
    }
    public NormalMovementActions @NormalMovement => new NormalMovementActions(this);
    public interface INormalMovementActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump1(InputAction.CallbackContext context);
        void OnMouse_Actions(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnRestartGame(InputAction.CallbackContext context);
        void OnQuitGame(InputAction.CallbackContext context);
    }
}
